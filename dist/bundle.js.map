{"version":3,"file":"bundle.js","sources":["../src/convertors.js","../src/index.js"],"sourcesContent":["/**\n * Converts breakpoint units in px to rem or em\n * @param {Object} breakpoints - an object containing breakpoint names as keys and the width as value\n * @param {number} [16] ratio - size of 1 rem in px. What is your main font-size in px? \n * @param {'rem' | 'em'} unit\n */\nfunction pxToEmOrRem(breakpoints, ratio = 16, unit) {\n  const newBreakpoints = {};\n\n  for (let key in breakpoints) {\n    const point = breakpoints[key];\n\n    if (String(point).includes('px')) {\n      newBreakpoints[key] = +(parseInt(point) / ratio) + unit;\n      continue;\n    }\n\n    newBreakpoints[key] = point;\n  }\n\n  return newBreakpoints;\n}\n\n/**\n * Converts breakpoint units in px to em \n * @param {Object} breakpoints - an object containing breakpoint names as keys and the width as value\n * @param {number} [16] ratio - size of 1em in px. What is your main font-size in px? \n */\nexport function pxToEm(breakpoints, ratio = 16) {\n  return pxToEmOrRem(breakpoints, ratio, 'em');\n}\n\n/**\n * Converts breakpoint units in px to rem \n * @param {Object} breakpoints - an object containing breakpoint names as keys and the width as value\n * @param {number} [16] ratio - size of 1rem in px. What is your main font-size in px? \n */\nexport function pxToRem(breakpoints, ratio = 16) {\n  return pxToEmOrRem(breakpoints, ratio, 'rem');\n}\n","import { css } from 'styled-components';\nimport { pxToEm, pxToRem } from './convertors';\n\nexport {\n  pxToEm,\n  pxToRem\n};\n\n/**\n * Default media breakpoints\n * @type {Object}\n */\nexport const defaultBreakpoints = {\n  huge: '1440px',\n  large: '1170px',\n  medium: '768px',\n  small: '450px',\n}\n\n/**\n * Media query generator \n * @param {Object} [defaultBreakpoints] breakpoints - Map labels to breakpoint sizes\n * @return {Object} - Media generators for each breakpoint\n */\nexport function generateMedia(breakpoints = defaultBreakpoints) {\n  return Object\n    .keys(breakpoints)\n    .reduce((acc, label) => {\n      const size = breakpoints[label];\n      \n      acc.to[label] = (...args) => css`\n        @media (max-width: ${size}) {\n          ${css(...args)}\n        }\n      `;\n\n      acc.from[label] = (...args) => css`\n        @media (min-width: ${size}) {\n          ${css(...args)}\n        }\n      `;\n\n      return acc;\n    }, \n    { to: {}, from: {} }\n  );\n}\n\n/**\n * Media object with default breakpoints\n * @return {object} - Media generators for each size\n */\n\nexport const media = generateMedia();\n\n/**\n * Usage: styled.div` ${media.from.medium`background: #000;`} `;\n * With this code, background for small and medium sizes will be `default` and for more than medium, will be `#000`\n */\n"],"names":["pxToEmOrRem","breakpoints","ratio","unit","newBreakpoints","key","point","String","includes","parseInt","pxToEm","pxToRem","defaultBreakpoints","generateMedia","Object","keys","reduce","acc","label","size","to","css","from","media"],"mappings":";;;;;;AAAA;;;;;;AAMA,SAASA,WAAT,CAAqBC,WAArB,EAAoD;MAAlBC,KAAkB,uEAAV,EAAU;MAANC,IAAM;;MAC5CC,iBAAiB,EAAvB;;OAEK,IAAIC,GAAT,IAAgBJ,WAAhB,EAA6B;QACrBK,QAAQL,YAAYI,GAAZ,CAAd;;QAEIE,OAAOD,KAAP,EAAcE,QAAd,CAAuB,IAAvB,CAAJ,EAAkC;qBACjBH,GAAf,IAAsB,EAAEI,SAASH,KAAT,IAAkBJ,KAApB,IAA6BC,IAAnD;;;;mBAIaE,GAAf,IAAsBC,KAAtB;;;SAGKF,cAAP;;;;;;;;AAQF,AAAO,SAASM,MAAT,CAAgBT,WAAhB,EAAyC;MAAZC,KAAY,uEAAJ,EAAI;;SACvCF,YAAYC,WAAZ,EAAyBC,KAAzB,EAAgC,IAAhC,CAAP;;;;;;;;AAQF,AAAO,SAASS,OAAT,CAAiBV,WAAjB,EAA0C;MAAZC,KAAY,uEAAJ,EAAI;;SACxCF,YAAYC,WAAZ,EAAyBC,KAAzB,EAAgC,KAAhC,CAAP;;;;;;;;ACtCF,AAQA;;;;AAIA,AAAO,IAAMU,qBAAqB;QAC1B,QAD0B;SAEzB,QAFyB;UAGxB,OAHwB;SAIzB;;;;;;;CAJF,CAYA,SAASC,aAAT,GAAyD;MAAlCZ,WAAkC,uEAApBW,kBAAoB;;SACvDE,OACJC,IADI,CACCd,WADD,EAEJe,MAFI,CAEG,UAACC,GAAD,EAAMC,KAAN,EAAgB;QAChBC,OAAOlB,YAAYiB,KAAZ,CAAb;;QAEIE,EAAJ,CAAOF,KAAP,IAAgB;aAAaG,oBAAb,kBACOF,IADP,EAEVE,gDAFU;KAAhB;;QAMIC,IAAJ,CAASJ,KAAT,IAAkB;aAAaG,oBAAb,mBACKF,IADL,EAEZE,gDAFY;KAAlB;;WAMOJ,GAAP;GAjBG,EAmBL,EAAEG,IAAI,EAAN,EAAUE,MAAM,EAAhB,EAnBK,CAAP;;;;;;;;AA4BF,AAAO,IAAMC,QAAQV,eAAd;;;;;;;;;;;;;;;;;;;;;"}